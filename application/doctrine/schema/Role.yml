Role:
    listeners: [IndexListener]

    columns:
        createdTs: timestamp
        modifiedTs: timestamp

        name:
            type: string(255)
            extra:
                logicalName: Role Name
        nickname:
            type: string(255)
            unique: true
            extra:
                logicalName: Role Nickname
            unique: true;
        description:
            type: string
            extra:
                logicalName: Description
                purify: html
            comment: Any extra information about this role, such as security clearances required to hold it, etc.
        type:
            type: enum
            values: [ACCOUNT_TYPE, USER_GROUP]
            extra:
                logicalName: Role Type
            comment: To distinguish between account types (with privileges) and user groups (only used for workflows)

    relations:
        # Users is a many-to-many relation
        Users:
            class: User
            local: roleId
            foreign: userId
            refClass: UserRole

        # Privileges is a many-to-many relation
        Privileges:
            class: Privilege
            local: roleId
            foreign: privilegeId
            refClass: RolePrivilege

    actAs:
        Timestampable:
            created:
                name: createdTs
                type: timestamp
            updated:
                name: modifiedTs
                type: timestamp

        SoftDelete: true
