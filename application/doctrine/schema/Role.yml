Role:
    listeners: [IndexListener, NotificationListener]
    
    columns:
        createdTs: timestamp
        modifiedTs: timestamp
        
        name: 
            type: string(255)
            extra:
                logicalName: Role Name
                notify: true
        nickname: 
            type: string(255)
            extra:
                logicalName: Role Nickname
                notify: true      
        description: 
            type: string
            extra:
                logicalName: Description
                purify: html
                notify: true
            comment: Any extra information about this role, such as security clearances required to hold it, etc.
    indexes:
        unique_nickname: { fields: [nickname, deleted_at], type: unique }
    relations:
        # Users is a many-to-many relation
        Users:
            class: User
            local: roleId
            foreign: userId
            refClass: UserRole
        
        # Privileges is a many-to-many relation
        Privileges:
            class: Privilege
            local: roleId
            foreign: privilegeId
            refClass: RolePrivilege

    actAs:
        Timestampable:
            created:
                name: createdTs
                type: timestamp
            updated:
                name: modifiedTs
                type: timestamp

        SoftDelete:
            type: boolean
