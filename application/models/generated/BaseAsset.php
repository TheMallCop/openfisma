<?php

/**
 * BaseAsset
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property timestamp $createdTs
 * @property timestamp $modifiedTs
 * @property string $name
 * @property enum $source
 * @property string $addressIp
 * @property integer $addressPort
 * @property integer $productId
 * @property integer $systemId
 * @property integer $networkId
 * @property System $System
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5441 2009-01-30 22:58:43Z jwage $
 */
abstract class BaseAsset extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('asset');
        $this->hasColumn('createdTs', 'timestamp', null, array('type' => 'timestamp'));
        $this->hasColumn('modifiedTs', 'timestamp', null, array('type' => 'timestamp'));
        $this->hasColumn('name', 'string', 255, array('type' => 'string', 'comment' => 'The name of this asset', 'length' => '255'));
        $this->hasColumn('source', 'enum', null, array('type' => 'enum', 'values' => array(0 => 'manual', 1 => 'scan'), 'default' => 'manual', 'comment' => 'Whether this asset was created manually or by an automated scanner'));
        $this->hasColumn('addressIp', 'string', 15, array('type' => 'string', 'ip' => true, 'comment' => 'The IP address for this asset', 'length' => '15'));
        $this->hasColumn('addressPort', 'integer', 2, array('type' => 'integer', 'comment' => 'The IP port for this asset', 'length' => '2'));
        $this->hasColumn('productId', 'integer', null, array('type' => 'integer', 'comment' => 'Foreign key to product table'));
        $this->hasColumn('systemId', 'integer', null, array('type' => 'integer', 'comment' => 'Foreign key to system table'));
        $this->hasColumn('networkId', 'integer', null, array('type' => 'integer', 'comment' => 'Foreign key to network table'));
    }

    public function setUp()
    {
        $this->hasOne('System', array('local' => 'systemId',
                                      'foreign' => 'id'));
    }
}