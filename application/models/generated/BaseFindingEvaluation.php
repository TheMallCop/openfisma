<?php

/**
 * BaseFindingEvaluation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property timestamp $createdTs
 * @property integer $findingId
 * @property integer $evidenceId
 * @property integer $evaluationId
 * @property enum $decision
 * @property integer $userId
 * @property string $comment
 * @property Finding $Finding
 * @property Evidence $Evidence
 * @property Evaluation $Evaluation
 * @property User $User
 * @property Doctrine_Collection $Comments
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5441 2009-01-30 22:58:43Z jwage $
 */
abstract class BaseFindingEvaluation extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('finding_evaluation');
        $this->hasColumn('createdTs', 'timestamp', null, array('type' => 'timestamp'));
        $this->hasColumn('findingId', 'integer', null, array('type' => 'integer', 'comment' => 'Foreign key to the finding which this evaluation is against (optional, this is mutually exclusive with evidenceId)'));
        $this->hasColumn('evidenceId', 'integer', null, array('type' => 'integer', 'comment' => 'Foreign key to the evidence which this evaluation is against (optional, this is mutually exclusive with findingId)'));
        $this->hasColumn('evaluationId', 'integer', null, array('type' => 'integer', 'comment' => 'Foreign key to the type of evaluation which this represents against the finding'));
        $this->hasColumn('decision', 'enum', null, array('type' => 'enum', 'values' => array(0 => 'APPROVED', 1 => 'DENIED'), 'comment' => 'The approve result'));
        $this->hasColumn('userId', 'integer', null, array('type' => 'integer', 'comment' => 'Foreign key to the user who completed this evaluation'));
        $this->hasColumn('comment', 'string', null, array('type' => 'string', 'comment' => 'The deny comment'));
    }

    public function setUp()
    {
        $this->hasOne('Finding', array('local' => 'findingId',
                                       'foreign' => 'id'));

        $this->hasOne('Evidence', array('local' => 'evidenceId',
                                        'foreign' => 'id'));

        $this->hasOne('Evaluation', array('local' => 'evaluationId',
                                          'foreign' => 'id'));

        $this->hasOne('User', array('local' => 'userId',
                                    'foreign' => 'id'));

        $this->hasMany('Comment as Comments', array('local' => 'id',
                                                    'foreign' => 'findingEvaluationId'));

        $timestampable0 = new Doctrine_Template_Timestampable(array('created' => array('name' => 'createdTs', 'type' => 'timestamp'), 'updated' => array('disabled' => true)));
        $this->actAs($timestampable0);
    }
}