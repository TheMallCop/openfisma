<?php

/**
 * BaseOrganization
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property timestamp $createdTs
 * @property timestamp $modifiedTs
 * @property string $name
 * @property string $nickname
 * @property enum $orgType
 * @property string $description
 * @property integer $lft
 * @property integer $rgt
 * @property integer $level
 * @property Doctrine_Collection $Users
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5441 2009-01-30 22:58:43Z jwage $
 */
abstract class BaseOrganization extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('organization');
        $this->hasColumn('createdTs', 'timestamp', null, array('type' => 'timestamp'));
        $this->hasColumn('modifiedTs', 'timestamp', null, array('type' => 'timestamp'));
        $this->hasColumn('name', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('nickname', 'string', 255, array('type' => 'string', 'unique' => 'true;', 'length' => '255'));
        $this->hasColumn('orgType', 'enum', null, array('type' => 'enum', 'values' => array(0 => 'agency', 1 => 'bureau', 2 => 'organization', 3 => 'system'), 'length' => ''));
        $this->hasColumn('description', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('lft', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('rgt', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('level', 'integer', 2, array('type' => 'integer', 'length' => '2'));
    }

    public function setUp()
    {
        $this->hasMany('User as Users', array('refClass' => 'UserOrganization',
                                              'local' => 'organizationId',
                                              'foreign' => 'userId'));

        $nestedset0 = new Doctrine_Template_NestedSet();
        $timestampable0 = new Doctrine_Template_Timestampable(array('created' => array('name' => 'createdTs', 'type' => 'timestamp'), 'updated' => array('name' => 'modifiedTs', 'type' => 'timestamp')));
        $this->actAs($nestedset0);
        $this->actAs($timestampable0);
    }
}