<?php

/**
 * BaseSystemDocument
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property timestamp $createdTs
 * @property string $mimeType
 * @property string $fileName
 * @property integer $size
 * @property string $description
 * @property integer $documentTypeId
 * @property integer $userId
 * @property integer $systemId
 * @property DocumentType $DocumentType
 * @property User $User
 * @property System $System
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5441 2009-01-30 22:58:43Z jwage $
 */
abstract class BaseSystemDocument extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('system_document');
        $this->hasColumn('createdTs', 'timestamp', null, array('type' => 'timestamp'));
        $this->hasColumn('mimeType', 'string', 255, array('type' => 'string', 'extra' => array('purify' => 'plaintext'), 'comment' => 'Store the MIME type of this uploaded file', 'length' => '255'));
        $this->hasColumn('fileName', 'string', 255, array('type' => 'string', 'extra' => array('purify' => 'plaintext'), 'comment' => 'Name of the uploaded file', 'length' => '255'));
        $this->hasColumn('size', 'integer', null, array('type' => 'integer', 'comment' => 'Size of the file in bytes'));
        $this->hasColumn('description', 'string', null, array('type' => 'string', 'extra' => array('purify' => 'plaintext'), 'comment' => 'A place for the user to enter version comments'));
        $this->hasColumn('documentTypeId', 'integer', null, array('type' => 'integer', 'comment' => 'Foreign key to a table which describes what type of document this is, e.g. system security plan, etc.'));
        $this->hasColumn('userId', 'integer', null, array('type' => 'integer', 'comment' => 'Foreign key to the user who uploaded this file'));
        $this->hasColumn('systemId', 'integer', null, array('type' => 'integer', 'comment' => 'Foreign key to the system which this file belongs to'));


        $this->index('uniqueTypePerSystem', array('fields' => array('systemId' =>  array(), 'documentTypeId' =>  array()), 'type' => 'unique'));
    }

    public function setUp()
    {
        $this->hasOne('DocumentType', array('local' => 'documentTypeId',
                                            'foreign' => 'id'));

        $this->hasOne('User', array('local' => 'userId',
                                    'foreign' => 'id'));

        $this->hasOne('System', array('local' => 'systemId',
                                      'foreign' => 'id'));

        $versionable0 = new Doctrine_Template_Versionable(array('versionColumn' => 'version', 'className' => '%CLASS%Version', 'auditLog' => true, 'deleteVersions' => true));
        $timestampable0 = new Doctrine_Template_Timestampable(array('created' => array('name' => 'createdTs', 'type' => 'timestamp')));
        $this->actAs($versionable0);
        $this->actAs($timestampable0);

    $this->addListener(new XssListener(), 'XssListener');
    }
}