<?php 
        $listButton = new Fisma_Yui_Form_Button_Link('listButton', 
                                               array('value' => 'Information Types', 
                                                     'href' => '/sa/informationType/list'));
        echo $this->escape($listButton, 'none');
        ?>

        <?php 
        if ($this->acl()->hasPrivilegeForClass('create', 'SaInformationType')) {
            $createButton = new Fisma_Yui_Form_Button_Link('createButton', 
                                                   array('value' => 'Add Information Type', 
                                                         'href' => '/sa/informationType/create'));
            echo $this->escape($createButton, 'none');
        } 

Fisma_Format_Section::startSection("Information Types <span id='searchResultsTotalFound'></span>"); ?>
<div id="list"></div>
<script type="text/javascript">
    var viewOperation = function(elCell, oRecord, oColumn, sData) {
        elCell.innerHTML = "<a href='/sa/informationType/view/id/"+oRecord.getData("id")+"'>"
                         + "<img src='/images/view.gif' /></a>";
    };

    var booleanFormatter = function(elCell, oRecord, oColumn, sData) {
        elCell.innerHTML = (oRecord.getData("hidden")) ? "YES" : "NO";
    };

    // Column definitions
    var myColumnDefs = [
        {key:"category", label:"Category", formatter:"text", sortable:true},
        {key:"name", label:"Name", formatter:"text", sortable:true},
        {key:"description", label:"Description", formatter:"text"},
        {key:"confidentiality", label:"Confidentiality", formatter:"text", sortable:true},
        {key:"integrity", label:"Integrity", formatter:"text", sortable:true},
        {key:"availability", label:"Availability", formatter:"text", sortable:true},
        {key:"hidden", label:"Hidden", formatter:booleanFormatter, sortable:true},
        {key: 'id', label:'View', formatter: viewOperation}];

    // A function which builds the query string
    var myRequestBuilder = function(oState, oSelf) {
        // Get states or use defaults
        oState = oState || {pagination:null, sortedBy:null};
        var sort = (oState.sortedBy) ? oState.sortedBy.key : 'id';
        var dir = (oState.sortedBy && oState.sortedBy.dir == 'yui-dt-asc') ? "asc" : "desc";
        var startIndex = oState.pagination.recordOffset;
        var count = oState.pagination.rowsPerPage;
    
        // Build custom request
        var request = "/startIndex/" + startIndex +
                      "/sortby/" + sort +
                      "/order/" + dir +
                      "/count/" + count + 
                      "<?php echo $this->escape($this->url, 'none') ?>";
        return request;
    };

    var myDataSource = new YAHOO.util.DataSource('/sa/informationType/search');
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "table.records",
        metaFields: {
            totalRecords: "table.totalRecords"
        }
    };
    
    // DataTable configuration
    var myConfigs = {
        initialRequest: "/startIndex/0/count/10<?php echo $this->escape($this->url, 'none')?>",
        dynamicData: true, 
        paginator: new YAHOO.widget.Paginator(
            {
                rowsPerPage:10,
                template:"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
            }
        ),
        generateRequest : myRequestBuilder
    };
    
    var myDataTable = new YAHOO.widget.DataTable("list", myColumnDefs, myDataSource, myConfigs);
    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        // display total records in the search results header, if not already present
        var searchResultsHeader = document.getElementById('searchResultsTotalFound');
        if (!searchResultsHeader.firstChild) {
            var totalRecords = oResponse.meta.totalRecords ? oResponse.meta.totalRecords : 0;
            var searchTotalFound = document.createTextNode('(' + totalRecords + ' records found)');
            searchResultsHeader.appendChild(searchTotalFound);
        }
        return oPayload;
    }
    
    myDataTable.subscribe("rowMouseoverEvent", myDataTable.onEventHighlightRow); 
    myDataTable.subscribe("rowMouseoutEvent", myDataTable.onEventUnhighlightRow);
</script>
<?php Fisma_Format_Section::stopSection(); ?>
