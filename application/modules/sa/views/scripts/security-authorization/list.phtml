<?php 
        $listButton = new Fisma_Yui_Form_Button_Link('listButton', 
                                               array('value' => 'Security Authorization List', 
                                                     'href' => '/sa/security-authorization/list'));
        echo $this->escape($listButton, 'none');
        ?>

        <?php 
        if ($this->acl()->hasPrivilegeForClass('create', 'SecurityAuthorization')) {
            $createButton = new Fisma_Yui_Form_Button_Link('createButton', 
                                                   array('value' => 'Add Security Authorization', 
                                                         'href' => '/sa/security-authorization/create'));
            echo $this->escape($createButton, 'none');
        } 

Fisma_Format_Section::startSection("Security Authorizations <span id='searchResultsTotalFound'></span>"); ?>
<div id="list"></div>
<script type="text/javascript">
    var operation = function(elCell, oRecord, oColumn, sData) {
        elCell.innerHTML = "<a href='/sa/security-authorization/view/id/"+oRecord.getData("id")+"'>"
                         + "<img src='/images/view.gif' /></a>";
    };
    // Column definitions
    var myColumnDefs = [
        {key:"id", label:"ID", formatter:"text"},
        {key:"system", label:"System", formatter:"text"},
        {key:"impact", label:"Impact", formatter:"text"},
        {key:"createdTs", label:"Created", formatter:"text"},
        {key: 'id', label:'View', formatter: operation}];

    // A function which builds the query string
    var myRequestBuilder = function(oState, oSelf) {
        // Get states or use defaults
        oState = oState || {pagination:null, sortedBy:null};
        var startIndex = oState.pagination.recordOffset;
        var count = oState.pagination.rowsPerPage;
    
        // Build custom request
        var request = "/startIndex/" + startIndex +
                      "/count/" + count + 
                      "<?php echo $this->escape($this->url, 'none') ?>";
        return request;
    };

    var myDataSource = new YAHOO.util.DataSource('/sa/security-authorization/search');
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "table.records",
        metaFields: {
            totalRecords: "table.totalRecords"
        }
    };
    
    // DataTable configuration
    var myConfigs = {
        initialRequest: "/startIndex/0/count/10<?php echo $this->escape($this->url, 'none')?>",
        dynamicData: true, 
        paginator: new YAHOO.widget.Paginator(
            {
                rowsPerPage:10,
                template:"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
            }
        ),
        generateRequest : myRequestBuilder
    };
    
    var myDataTable = new YAHOO.widget.DataTable("list", myColumnDefs, myDataSource, myConfigs);
    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        // display total records in the search results header, if not already present
        var searchResultsHeader = document.getElementById('searchResultsTotalFound');
        if (!searchResultsHeader.firstChild) {
            var totalRecords = oResponse.meta.totalRecords ? oResponse.meta.totalRecords : 0;
            var searchTotalFound = document.createTextNode('(' + totalRecords + ' records found)');
            searchResultsHeader.appendChild(searchTotalFound);
        }
        return oPayload;
    }
    
    myDataTable.subscribe("rowMouseoverEvent", myDataTable.onEventHighlightRow); 
    myDataTable.subscribe("rowMouseoutEvent", myDataTable.onEventUnhighlightRow);
    
    var contextMenuItems = ["View"];
    var contextMenu = new YAHOO.widget.ContextMenu( 
        "contextMenu", 
        { 
            trigger:  myDataTable.getTbodyEl(), 
            itemdata: contextMenuItems, 
            lazyload: true 
        }
    );
    
    contextMenu.subscribe("click", contextMenuHandler);
    
    function contextMenuHandler(event, eventArgs) {
        var targetElement = this.contextEventTarget;
        var rowElement = myDataTable.getTrEl(targetElement);
        var rowRecord = myDataTable.getRecord(rowElement);
        var menuItem = eventArgs[1];
        var actionUrl = '';
        switch (menuItem.index) {
            case 0 :
                actionUrl = "/asset/view/id/" + rowRecord.getData("id");
                break;
        }
        if (actionUrl != '') {
            window.open(actionUrl);
        }
    }
    
</script>
<?php Fisma_Format_Section::stopSection(); ?>
