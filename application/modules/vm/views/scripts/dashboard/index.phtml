<?php
    echo $this->escape($this->searchBox($this->toolbarButtons), 'none');
?>
<?php if ($this->message): ?>
<div class='message'><?php echo $this->escape($this->message); ?></div>
<?php else: ?>

<div class="row-fluid">
    <div class="span2"><?php
        $chartAv = new Fisma_Chart();
        $chartAv->setStandardLegendVisibility(false)->setTitle('Access Vector')->setChartType('pie');
        foreach ($this->byCvssAv as $criteria => $count):
            $chartAv->addColumn(
                Fisma_Vulnerability_Cvss::getUserFriendlyValue('AV', $criteria),
                $count,
                '/vm/vulnerability/list?q=isResolved/booleanNo/cvssVector/textContains/AV:' . $criteria
            );
        endforeach;
        $chartAv->setColors(array(Fisma_Chart::COLOR_MODERATE, Fisma_Chart::COLOR_LOW, Fisma_Chart::COLOR_HIGH));
        echo $this->escape($chartAv->export('html', false, true), 'none');
    ?></div>

    <div class="span2"><?php
        $chartAc = new Fisma_Chart();
        $chartAc->setStandardLegendVisibility(false)->setTitle('Access Complexity')->setChartType('pie');
        foreach ($this->byCvssAc as $criteria => $count):
            $chartAc->addColumn(
                Fisma_Vulnerability_Cvss::getUserFriendlyValue('AC', $criteria),
                $count,
                '/vm/vulnerability/list?q=isResolved/booleanNo/cvssVector/textContains/AC:' . $criteria
            );
        endforeach;
        $chartAc->setColors(array(Fisma_Chart::COLOR_LOW, Fisma_Chart::COLOR_HIGH, Fisma_Chart::COLOR_MODERATE));
        echo $this->escape($chartAc->export('html', false, true), 'none');
    ?></div>

    <div class="span2"><?php
        $chartAu = new Fisma_Chart();
        $chartAu->setStandardLegendVisibility(false)->setTitle('Authentication')->setChartType('pie');
        foreach ($this->byCvssAu as $criteria => $count):
            $chartAu->addColumn(
                Fisma_Vulnerability_Cvss::getUserFriendlyValue('Au', $criteria),
                $count,
                '/vm/vulnerability/list?q=isResolved/booleanNo/cvssVector/textContains/Au:' . $criteria
            );
        endforeach;
        $chartAu->setColors(array(Fisma_Chart::COLOR_LOW, Fisma_Chart::COLOR_HIGH, Fisma_Chart::COLOR_MODERATE));
        echo $this->escape($chartAu->export('html', false, true), 'none');
    ?></div>

    <div class="span2"><?php
        $chartC = new Fisma_Chart();
        $chartC->setStandardLegendVisibility(false)->setTitle('Confidentiality Impact')->setChartType('pie');
        foreach ($this->byCvssC as $criteria => $count):
            $chartC->addColumn(
                Fisma_Vulnerability_Cvss::getUserFriendlyValue('C', $criteria),
                $count,
                '/vm/vulnerability/list?q=isResolved/booleanNo/cvssVector/textContains/C:' . $criteria
            );
        endforeach;
        $chartC->setColors(array(Fisma_Chart::COLOR_HIGH, Fisma_Chart::COLOR_LOW, Fisma_Chart::COLOR_MODERATE));
        echo $this->escape($chartC->export('html', false, true), 'none');
    ?></div>

    <div class="span2"><?php
        $chartI = new Fisma_Chart();
        $chartI->setStandardLegendVisibility(false)->setTitle('Integrity Impact')->setChartType('pie');
        foreach ($this->byCvssI as $criteria => $count):
            $chartI->addColumn(
                Fisma_Vulnerability_Cvss::getUserFriendlyValue('I', $criteria),
                $count,
                '/vm/vulnerability/list?q=isResolved/booleanNo/cvssVector/textContains/I:' . $criteria
            );
        endforeach;
        $chartI->setColors(array(Fisma_Chart::COLOR_HIGH, Fisma_Chart::COLOR_LOW, Fisma_Chart::COLOR_MODERATE));
        echo $this->escape($chartI->export('html', false, true), 'none');
    ?></div>

    <div class="span2"><?php
        $chartA = new Fisma_Chart();
        $chartA->setStandardLegendVisibility(false)->setTitle('Availability Impact')->setChartType('pie');
        foreach ($this->byCvssA as $criteria => $count):
            $chartA->addColumn(
                Fisma_Vulnerability_Cvss::getUserFriendlyValue('A', $criteria),
                $count,
                '/vm/vulnerability/list?q=isResolved/booleanNo/cvssVector/textContains/A:' . $criteria
            );
        endforeach;
        $chartA->setColors(array(Fisma_Chart::COLOR_HIGH, Fisma_Chart::COLOR_LOW, Fisma_Chart::COLOR_MODERATE));
        echo $this->escape($chartA->export('html', false, true), 'none');
    ?></div>
</div>

<div class='row-fluid'>
<div class='span7 findingAnalystLeft' id='vmAnalystLeft'>
    <?php Fisma_Format_Section::startSection(
        'Unresolved: By ' . $this->escape($this->translate('Vulnerability_Point_of_Contact')),
        null,
        null,
        'byPoc'
    ); ?>
    <?php echo $this->escape($this->byPocTable, 'none'); ?>
    <?php if ($this->byPocTable->countData() > 8): ?>
        <a href='#' onclick='return Fisma.Finding.restrictTableLengthClickHandler(this, 0, "<?php
            echo $this->escape($this->byPocTable->getRegistryName());
        ?>")'>Show all
            <?php echo $this->escape($this->byPocTable->countData()); ?> records</a>
        <a href='#' onclick='return Fisma.Finding.restrictTableLengthClickHandler(this, 8, "<?php
            echo $this->escape($this->byPocTable->getRegistryName());
        ?>")'>Show first 8 records only</a>
    <?php endif; ?>
    <?php Fisma_Format_Section::stopSection(); ?>

    <?php Fisma_Format_Section::startSection('Unresolved: By System', null, null, 'bySystem'); ?>
    <?php echo $this->escape($this->bySystemTable, 'none'); ?>
    <?php if ($this->bySystemTable->countData() > 8): ?>
        <a href='#' onclick='return Fisma.Finding.restrictTableLengthClickHandler(this, 0, "<?php
            echo $this->escape($this->bySystemTable->getRegistryName());
        ?>")'>Show all
            <?php echo $this->escape($this->bySystemTable->countData()); ?> records</a>
        <a href='#' onclick='return Fisma.Finding.restrictTableLengthClickHandler(this, 8, "<?php
            echo $this->escape($this->bySystemTable->getRegistryName());
        ?>")'>Show first 8 records only</a>
    <?php endif; ?>
    <?php Fisma_Format_Section::stopSection(); ?>

    <?php Fisma_Format_Section::startSection(
        'Unresolved: By ' . $this->escape($this->translate('Summary')),
        null,
        null,
        'bySummary'
    ); ?>
    <?php echo $this->escape($this->bySummaryTable, 'none'); ?>
    <?php if ($this->bySummaryTable->countData() > 8): ?>
        <a href='#' onclick='return Fisma.Finding.restrictTableLengthClickHandler(this, 0, "<?php
            echo $this->escape($this->bySummaryTable->getRegistryName());
        ?>")'>Show all
            <?php echo $this->escape($this->bySummaryTable->countData()); ?> records</a>
        <a href='#' onclick='return Fisma.Finding.restrictTableLengthClickHandler(this, 8, "<?php
            echo $this->escape($this->bySummaryTable->getRegistryName());
        ?>")'>Show first 8 records only</a>
    <?php endif; ?>
    <?php Fisma_Format_Section::stopSection(); ?>

    <?php Fisma_Format_Section::startSection(
        'Unresolved: By ' . $this->escape($this->translate('Asset')),
        null,
        null,
        'byAsset'
    ); ?>
    <?php echo $this->escape($this->byAssetTable, 'none'); ?>
    <?php if ($this->byAssetTable->countData() > 8): ?>
        <a href='#' onclick='return Fisma.Finding.restrictTableLengthClickHandler(this, 0, "<?php
            echo $this->escape($this->byAssetTable->getRegistryName());
        ?>")'>Show all
            <?php echo $this->escape($this->byAssetTable->countData()); ?> records</a>
        <a href='#' onclick='return Fisma.Finding.restrictTableLengthClickHandler(this, 8, "<?php
            echo $this->escape($this->byAssetTable->getRegistryName());
        ?>")'>Show first 8 records only</a>
    <?php endif; ?>
    <?php Fisma_Format_Section::stopSection(); ?>



</div>
<div class='span5 findingAnalystRight' id='vmAnalystRight'>
    <?php Fisma_Format_Section::startSection('Unresolved: By Threat', null, null, 'byThreat'); ?>
    <table class='table table-striped no-border'>
    <?php foreach($this->byThreat as $statistic): ?>
        <tr>
            <td class='criteria'><?php echo $this->escape($statistic['criteria']); ?></td>
            <td class='value'><?php echo $this->escape($statistic['count']); ?></td>
            <td width='55%'>
                <a href='/vm/vulnerability/list?q=isResolved/booleanNo/threatLevel/enumIs/<?php
                    echo $this->escape($statistic['criteria'], 'url');
                ?>'><span
                class='bar <?php echo $this->escape($statistic['criteria']); ?>'
                style='width:<?php echo $this->escape($statistic['count']/$this->total*80); ?>%;'
                >
                </span></a>
                <span class='percentage'><?php
                    echo $this->escape(
                        ($statistic['count']/$this->total*100 < 1 && $statistic['count']/$this->total*100 > 0)
                        ? 'less than 1' : round($statistic['count']/$this->total*100)
                    );
                ?>%</span>
            </td>
        </tr>
    <?php endforeach; ?>
    </table>
    <?php Fisma_Format_Section::stopSection(); ?>

    <?php Fisma_Format_Section::startSection('Unresolved: By Workflow', null, null, 'byWorkflow'); ?>
    <table class='table table-striped no-border'>
    <?php foreach($this->byWorkflow as $statistic):
        $criteria = new Fisma_Yui_Tooltip('workflow_' . uniqid(), $statistic['criteria'], $statistic['tooltip']);
    ?>
        <tr>
            <td class='criteria'><?php echo $this->escape($criteria, 'none'); ?></td>
            <td class='value'><?php echo $this->escape($statistic['count']); ?></td>
            <td width='55%'>
                <a href='/vm/vulnerability/list?q=isResolved/booleanNo/workflow/textExactMatch/<?php
                    echo $this->escape($statistic['criteria'], 'url');
                ?>'><span class='bar normal' style='width:<?php
                        echo $this->escape($statistic['count']/$this->total*80);
                    ?>%;'>
                </span></a>
                <span class='percentage'><?php
                    echo $this->escape(
                        ($statistic['count']/$this->total*100 < 1 && $statistic['count']/$this->total*100 > 0)
                        ? 'less than 1' : round($statistic['count']/$this->total*100)
                    );
                ?>%</span>
            </td>
        </tr>
    <?php endforeach; ?>
    </table>
    <?php Fisma_Format_Section::stopSection(); ?>

    <?php Fisma_Format_Section::startSection('Unresolved: By Workflow Step', null, null, 'byWorkflowStep'); ?>
    <table class='table table-striped no-border'>
    <?php foreach($this->byWorkflowStep as $statistic):
        $criteria = new Fisma_Yui_Tooltip('workflow_step_' . uniqid(), $statistic['criteria'], $statistic['tooltip']);
    ?>
        <tr>
            <td class='criteria'><?php echo $this->escape($criteria, 'none'); ?></td>
            <td class='value'><?php echo $this->escape($statistic['count']); ?></td>
            <td width='55%'>
                <a href='/vm/vulnerability/list?q=isResolved/booleanNo/workflowStep/textExactMatch/<?php
                    echo $this->escape($statistic['criteria'], 'url');
                ?>'><span class='bar normal' style='width:<?php
                        echo $this->escape($statistic['count']/$this->total*80);
                    ?>%;'>
                </span></a>
                <span class='percentage'><?php
                    echo $this->escape(
                        ($statistic['count']/$this->total*100 < 1 && $statistic['count']/$this->total*100 > 0)
                        ? 'less than 1' : round($statistic['count']/$this->total*100)
                    );
                ?>%</span>
            </td>
        </tr>
    <?php endforeach; ?>
    </table>
    <?php Fisma_Format_Section::stopSection(); ?>

    <?php Fisma_Format_Section::startSection('Unresolved: By Network', null, null, 'byNetwork'); ?>
    <table class='table table-striped no-border'>
    <?php foreach($this->byNetwork as $statistic):
        $criteria = new Fisma_Yui_Tooltip('source_' . uniqid(), $statistic['criteria'], $statistic['tooltip']);
    ?>
        <tr>
            <td class='criteria'><?php echo $this->escape($criteria, 'none'); ?></td>
            <td class='value'><?php echo $this->escape($statistic['count']); ?></td>
            <td width='55%'>
                <a href='/vm/vulnerability/list?q=isResolved/booleanNo/network/textContains/<?php
                    echo $this->escape($statistic['criteria'], 'url');
                ?>'><span class='bar normal' style='width:<?php
                        echo $this->escape($statistic['count']/$this->total*80);
                    ?>%;'>
                </span></a>
                <span class='percentage'><?php
                    echo $this->escape(
                        ($statistic['count']/$this->total*100 < 1 && $statistic['count']/$this->total*100 > 0)
                        ? 'less than 1' : round($statistic['count']/$this->total*100)
                    );
                ?>%</span>
            </td>
        </tr>
    <?php endforeach; ?>
    </table>
    <?php Fisma_Format_Section::stopSection(); ?>

    <?php
        $chartOpenVuln = new Fisma_Chart();
        $chartOpenVuln->setStandardLegendVisibility(false)
                      ->setTitle('Open Vulnerabvilities (Last 30 Days)')
                      ->setChartType('line');
        $chartOpenVulnLabels = array();
        $chartOpenVulnData = array();
        foreach ($this->vulnTrending as $record) {
            $chartOpenVulnLabels[] = $record['vt_period'];
            $chartOpenVulnData[] = $record['vt_totalOpen'];
        }
        $chartOpenVuln->addLine($chartOpenVulnData, $chartOpenVulnLabels);
        $chartOpenVuln->setColors(array(Fisma_Chart::COLOR_BLUE));
        echo $this->escape($chartOpenVuln->export('html', false, true), 'none');
    ?>
</div>
<div class='clear'></div>
<script>
$(function() {
    Fisma.Finding.initDashboard();
});
</script>
<?php endif; ?>
