<?php Fisma_Format_Section::startSection("Asset Inventory"); ?>
<script type="text/javascript" src="/javascripts/selectallselectnone.js"></script>
<script type="text/javascript">
    function deleteSelectedAssets() {
        document.forms.assetresult.submit();
    }
</script>
<form id="assetresult" method="post" action="/asset/delete">
<div class="toolbar">
    <?php
        $pdfButton = new Fisma_Yui_Form_Button_Link('pdf', 
                                      array('value' => 'Export PDF', 
                                            'href' => "$this->url/format/pdf",
                                            'imageSrc' => '/images/pdf.gif'));
        $xlsButton = new Fisma_Yui_Form_Button_Link('xls',
                                      array('value' => 'Export Excel', 
                                            'href' => "$this->url/format/xls", 
                                            'imageSrc' => '/images/xls.gif'));
        echo $this->escape($pdfButton, 'none');
        echo $this->escape($xlsButton, 'none');
        if ($this->acl->hasPrivilegeForClass('delete', 'Asset')) {
            $selectAllButton = new Fisma_Yui_Form_Button('selectAll', 
                                                   array('label' => 'Select All', 
                                                         'onClickFunction' => 'selectAllUnsafe'));
            echo $this->escape($selectAllButton, 'none');

            $selectNoneButton = new Fisma_Yui_Form_Button('selectNone',
                                                    array('label' => 'Select None', 
                                                          'onClickFunction' => 'selectNoneUnsafe'));
            echo $this->escape($selectNoneButton, 'none');

            $deleteButton = new Fisma_Yui_Form_Button('deleteSelected',
                                                array('label' => 'Delete Selected', 
                                                      'onClickFunction' => 'deleteSelectedAssets'));
            echo $this->escape($deleteButton, 'none');
        }
        if ($this->acl->hasPrivilegeForClass('create', 'Asset')) {
            $createButton = new Fisma_Yui_Form_Button_Link('createAsset', 
                                          array('value' => 'Create Asset', 
                                                'href' => '/asset/create'));
            echo $this->escape($createButton, 'none');
        }
    ?>
    <b>Page:&nbsp;</b><?php echo $this->escape($this->links['all'])?>
</div>
<?php Fisma_Format_Section::startSection("Assets List <span id='searchResultsTotalFound'></span>"); ?>
<div id="list"></div>
<script type="text/javascript">
    var checkboxList = function(elCell, oRecord, oColumn, sData) {
        elCell.innerHTML = "<input type='checkbox' name='aid[]' value='" + oRecord.getData("id") + "' />";
    };
    
    // Column definitions
    var myColumnDefs = [{key: 'id', label:'', formatter: checkboxList},<?php
    $i = 0;
    foreach ($this->columns as $k => $v) {
        if ($i != 0) echo $this->escape(',', 'none');
        echo $this->escape('{key:"', 'none');
        echo $this->escape($k, 'javascript');
        echo $this->escape('", label:"', 'none');
        echo $this->escape($v, 'javascript');
        echo $this->escape('"}', 'none');
        $i ++;
    }
    ?>
    ];

    // A function which builds the query string
    var myRequestBuilder = function(oState, oSelf) {
        // Get states or use defaults
        oState = oState || {pagination:null, sortedBy:null};
        var startIndex = oState.pagination.recordOffset;
        var count = oState.pagination.rowsPerPage;
    
        // Build custom request
        var request = "/startIndex/" + startIndex +
                      "/count/" + count;
        return request;
    };

    var myDataSource = new YAHOO.util.DataSource('/panel/asset/sub/search');
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "table.records",
        metaFields: {
            totalRecords: "table.totalRecords"
        }
    };
    
    // DataTable configuration
    var myConfigs = {
        initialRequest: "/startIndex/0/count/10",
        dynamicData: true, 
        paginator: new YAHOO.widget.Paginator(
            {
                rowsPerPage:10,
                template:"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
            }
        ),
        generateRequest : myRequestBuilder
    };
    
    var myDataTable = new YAHOO.widget.DataTable("list", myColumnDefs, myDataSource, myConfigs);
    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        // display total records in the search results header, if not already present
        var searchResultsHeader = document.getElementById('searchResultsTotalFound');
        if (!searchResultsHeader.firstChild) {
            var totalRecords = oResponse.meta.totalRecords ? oResponse.meta.totalRecords : 0;
            var searchTotalFound = document.createTextNode('(' + totalRecords + ' records found)');
            searchResultsHeader.appendChild(searchTotalFound);
        }
        return oPayload;
    }
    
    myDataTable.subscribe("rowMouseoverEvent", myDataTable.onEventHighlightRow); 
    myDataTable.subscribe("rowMouseoutEvent", myDataTable.onEventUnhighlightRow);
    <?php 
    if ($this->acl->hasPrivilegeForClass('read', 'Asset')) { 
    ?>
    myDataTable.subscribe("rowClickEvent", 
        function (oArgs) {
            var elTarget = oArgs.target;
            var oRecord = this.getRecord(elTarget);
            document.location = "/panel/asset/sub/view/id/" + oRecord.getData("id");
        }
    );
    <?php 
    }
    ?>
    
    var contextMenuItems = ["View"];
    var contextMenu = new YAHOO.widget.ContextMenu( 
        "contextMenu", 
        { 
            trigger:  myDataTable.getTbodyEl(), 
            itemdata: contextMenuItems, 
            lazyload: true 
        }
    );
    
    contextMenu.subscribe("click", contextMenuHandler);
    
    function contextMenuHandler(event, eventArgs) {
        var targetElement = this.contextEventTarget;
        var rowElement = myDataTable.getTrEl(targetElement);
        var rowRecord = myDataTable.getRecord(rowElement);
        var menuItem = eventArgs[1];
        var actionUrl = '';
        switch (menuItem.index) {
            case 0 :
                actionUrl = "/panel/asset/sub/view/id/" + rowRecord.getData("id");
                break;
        }
        if (actionUrl != '') {
            window.open(actionUrl);
        }
    }
    
</script>
<?php Fisma_Format_Section::stopSection(); ?>
