	<chart>
	<chart_data>
		<row>
            <null />
            <?php foreach ($this->summary AS $status=>$statusCount) { ?>
			<string><?php echo $status; ?>: <?php if (isset($this->description[$status])) { echo $this->description[$status];}?></string>
			<?php } reset($this->summary); ?>
		</row>
		<row>
            <string>count</string>
            <?php foreach ($this->summary AS $statusCount) { ?>
			<number><?php echo $statusCount; ?></number>
			<?php } ?>
		</row>
	</chart_data>

	<chart_grid_h alpha='20' color='ffffff' thickness='1' type='solid' />
	
	<chart_rect x='180'   positive_color='ffffff' positive_alpha='20' negative_color='ff0000' negative_alpha='10' />
	
	<chart_type><?php
        if( array_sum($this->summary) == 0) {
            echo 'bar';
        }else{
            echo 'pie';
        }
    ?></chart_type>
	
	<chart_value color='000000' alpha='90' font='arial' bold='true' size='10' position='inside' prefix='' suffix='' decimals='0' separator='' as_percentage='true'   />

	<draw>
		<text color='000000' alpha='10' font='arial' rotation='0' bold='false' size='30' x='0' y='140' width='400' height='150' h_align='left' v_align='bottom'>|||||||||||||||||||||||||||||||||||||||||||||||</text>
	</draw>

	<legend_label layout='vertical' bullet='circle' font='arial' bold='0' size='9' color='000000' alpha='100' />
	<legend_rect fill_color='ffffff' fill_alpha='10' line_color='000000' line_alpha='0' line_thickness='0' />

	<series_color>
<?php
    // Figure out which colors are MSA colors and which are EP colors
    unset($this->summary['NEW']);
    unset($this->summary['OPEN']);
    $msaColors = array();
    foreach ($this->summary as $status => $filler) {
        if ($status == 'EN') {
            break;
        }
        $msaColors[] = $status;
        unset($this->summary[$status]);
    }
    unset($this->summary['EN']);
    $epColors = array();
    foreach ($this->summary as $status => $filler) {
        $epColors[] = $status;
    }

    // Colors for NEW & OPEN
    print '<!-- NEW --><color>cccccc</color>';
    print '<!-- OPEN --><color>66ff66</color>';

    // Colors for MSA
    define('START_COLOR', 200); // These constants are used for creating a gradient
    define('STOP_COLOR', 25); // The range of these constants sets the high and low gradient value
    $colorStep = (STOP_COLOR - START_COLOR) / (count($msaColors) - 1);
	for ($i = 0; $i < count($msaColors); $i++) {
        $hex = dechex(START_COLOR + ($colorStep * $i));
        print "<!-- MSA --><color>ff{$hex}{$hex}</color>";
	}

	// Color for EN
	print '<!-- EN --><color>ff9933</color>';

	// Colors for EP
    $colorStep = (STOP_COLOR - START_COLOR) / (count($epColors) - 1);
	for ($i = 0; $i < count($epColors); $i++) {
        $hex = dechex(START_COLOR + ($colorStep * $i));
        print "<!-- EP --><color>{$hex}{$hex}ff</color>";
	}
?>
	</series_color>
	<series_explode>
		<number>5</number>
		<number>5</number>
		<number>5</number>
		<number>5</number>
		<number>5</number>
		<number>5</number>
		<number>5</number>
		<number>5</number>
		<number>5</number>
	</series_explode>
    </chart>

