<?php 
Fisma_Format_Section::startSection("Incidents Updated In Last 48 Hours <span id='searchResultsTotalFound'></span>"); 
?>

<div id="list"></div>

<script type="text/javascript">
    // Column definitions
    var myColumnDefs = [
        {key:"id", label:"ID", sortable: true, hidden: false},
        {key:"modifiedTs", label:"Last Update Timestamp", sortable: true, hidden: false},
        {key:"additionalInfo", label:"Description", sortable: false, hidden: false}
    ];

    // A function which builds the query string
    var myRequestBuilder = function(oState, oSelf) {
        // Get states or use defaults
        oState = oState || {pagination:null, sortedBy:null};
        var sort = (oState.sortedBy) ? oState.sortedBy.key : "modifiedTs";
        var dir = (oState.sortedBy && oState.sortedBy.dir == 'yui-dt-asc') ? "asc" : "desc";
        var startIndex = oState.pagination.recordOffset;
        var count = oState.pagination.rowsPerPage;
    
        // Build custom request
        var request = "/sort-by/" + sort +
                      "/order/" + dir +
                      "/offset/" + startIndex +
                      "/limit/" + count;
        return request;
    };

    // DataSource instance
    var myDataSource = new YAHOO.util.DataSource("<?php echo $this->baseUrl; ?>");
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "newIncidents",
        metaFields: {
            totalRecords: "count"
        }
    };
    
    // DataTable configuration
    var myConfigs = {
        //dynamicData: false
        dynamicData: true, 
        sortedBy : {key:"modifiedTs", dir:YAHOO.widget.DataTable.CLASS_DESC},
        paginator: new YAHOO.widget.Paginator(
            {
                rowsPerPage: <?php echo $this->rowsPerPage; ?>,
                template:"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
            }
        ), 
        generateRequest : myRequestBuilder
    };
    
    var myDataTable = new YAHOO.widget.DataTable("list", myColumnDefs, myDataSource, myConfigs);
    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        // display total records in the search results header, if not already present
        var searchResultsHeader = document.getElementById('searchResultsTotalFound');
        if (!searchResultsHeader.firstChild) {
            var totalRecords = oResponse.meta.totalRecords ? oResponse.meta.totalRecords : 0;
            var searchTotalFound = document.createTextNode('(' + totalRecords + ' records found)');
            searchResultsHeader.appendChild(searchTotalFound);
        }
        return oPayload;
    }
    
    myDataTable.subscribe("rowMouseoverEvent", myDataTable.onEventHighlightRow); 
    myDataTable.subscribe("rowMouseoutEvent", myDataTable.onEventUnhighlightRow); 
    myDataTable.subscribe("rowClickEvent", 
        function (oArgs) {
            var elTarget = oArgs.target;
            var oRecord = this.getRecord(elTarget);
            document.location = "/panel/incident/sub/view/id/" + oRecord.getData("id");
        }
    );
    
    var contextMenuItems = ["View"];
    var contextMenu = new YAHOO.widget.ContextMenu( 
        "contextMenu", 
        { 
            trigger:  myDataTable.getTbodyEl(), 
            itemdata: contextMenuItems, 
            lazyload: true 
        }
    );
    
    contextMenu.subscribe("click", contextMenuHandler);
    
    function contextMenuHandler(event, eventArgs) {
        var targetElement = this.contextEventTarget;
        var rowElement = myDataTable.getTrEl(targetElement);
        var rowRecord = myDataTable.getRecord(rowElement);
        var menuItem = eventArgs[1];
        var actionUrl = '';
        switch (menuItem.index) {
            case 0 :
                actionUrl = "/panel/incident/sub/view/id/" + rowRecord.getData("id");
                break;
        }
        if (actionUrl != '') {
            window.open(actionUrl);
        }
    }
</script>
<?php Fisma_Format_Section::stopSection(); ?>
