<script language="javascript">
   /* $(document).ready(function(){
        <?php
            foreach (explode(',', $this->keywords) as $keyword) {
        ?>
        highlight(document.getElementById('poam_list'), '<?php echo $keyword;?>');            
        <?php } ?>
    });*/
</script>
<?php
    $baseUrl =  "/panel/remediation/sub/view";
    if (!empty($this->keywords)) {
        $baseUrl .= '/keywords/' . $this->keywords;
    }
?>
<?php Format_Section::startSection("Search Results"); ?>
    <div class="toolbar">
        <script type="text/javascript">
            function addSearchBookmark() {
                addBookmark('Search',
                            '<?php echo Config_Fisma::readSysConfig("hostUrl").$this->url; ?>');
            }
            
            var columnOptionsShowing = false;
            var columnOptionsPanel;
            function showColumnOptions() {
                if (!columnOptionsPanel) {
                    var columns = {
                        id: "POAM Id",
                        source_nickname: "Source",
                        system_nickname: "System",
                        asset_name: "Asset",
                        type: "Type",
                        status: "Status",
                        duetime: "On Time?",
                        finding_data: "Description",
                        action_suggested: "Recommendation",
                        action_planned: "Course of Action",
                        blscr_id: "Security Control",
                        threat_level: "Threat Level",
                        threat_source: "Threat Description",
                        cmeasure_effectiveness: "Countermeasure Effectiveness",
                        cmeasure: "Countermeasure Description",
                        attachments: "Attachmments",
                        action_current_date: "ECD",
                    };
                	for (column in columns) {
                	    var oCheckButton9 = new YAHOO.widget.Button({  
                            type: "checkbox",  
                            label: columns[column],  
                            container: "columnOptionsPanelBody",
                            onclick: {
                                fn: toggleColumn,
                                obj: column
                            }
                        });
                    columnOptionsPanel = new YAHOO.widget.Panel('columnOptionsPanel', {width:"300px"} ); 
                	columnOptionsPanel.setHeader("Column Options");
                	}
                	columnOptionsPanel.render(document.body); 
                }

                columnOptionsPanel.show();
            }
            
            function toggleColumn(event, column) {
                alert(column);
                var columnElement = document.getElementById(column);
                alert(columnElement);
                if (columnElement.style.visibility == 'visible') {
                    alert('about to show');
                    columnElement.style.visibility = 'collapse';
                } else {
                    alert('about to hide');
                    columnElement.style.visibility = 'visible';
                }
            }
        </script>
        <?php 
            $addBookmarkButton = new Yui_Form_Button_Link('Bookmark This Search', 'addBookmark', '#', '/images/favorite.gif');
            $addBookmarkButton->onClick('addSearchBookmark');
            echo $addBookmarkButton;
            echo new Yui_Form_Button_Link('Export PDF', 'exportPdf', "{$this->attachUrl}/format/pdf", '/images/pdf.gif');
            echo new Yui_Form_Button_Link('Export Excel', 'exportExcel', "{$this->attachUrl}/format/xls", '/images/xls.gif');
            $columnOptionsButton = new Yui_Form_Button_Link('Options', 'columnOptions', '#', '/images/options.png');
            $columnOptionsButton->onClick('showColumnOptions');
            echo $columnOptionsButton;
        ?>
    </div>
    <div id="dynamicdata" style="width: 100%;"></div> 
    <script type="text/javascript">

    // Column definitions
    var myColumnDefs = [ // sortable:true enables sorting
        {key:"id", label:"ID", sortable:true},
        {key:"source_nickname", label:"Source", sortable:true},
        {key:"system_nickname", label:"System", sortable:true},
        {key:"asset_name", label:"Asset", sortable:true},
        {key:"type", label:"Type", sortable:true},
        {key:"status", label:"Status", sortable:true},
        {key:"duetime", label:"On Time?"},
        {key:"finding_data", label:"Description"},
        //{key:"action_suggested", label:"Recommendation"},
        //{key:"action_planned", label:"Course of Action"},
        //{key:"blscr_id", label:"Security Control", sortable:true},
        //{key:"threat_level", label:"Threat Level", sortable:true},
        //{key:"threat_source", label:"Threat Description"},
        //{key:"cmeasure_effectiveness", label:"Countermeasure Effectiveness", sortable:true},
        //{key:"cmeasure", label:"Countermeasure Description"},
        //{key:"attachments", label:"Attachments"},
        //{key:"action_current_date", label:"Expected Completion Date", sortable:true}    
    ]; // look at formatters

    // Custom parser
    var stringToDate = function(sData) {
        var array = sData.split("-");
        return new Date(array[1] + " " + array[0] + ", " + array[2]);
    };

    // DataSource instance
    var myDataSource = new YAHOO.util.DataSource("/remediation/search2/format/json");
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "poam.records",
        metaFields: {
            totalRecords: "poam.totalRecords"
        }
    };

    // A function which builds the query string
    var myRequestBuilder = function(oState, oSelf) {
        // Get states or use defaults
        oState = oState || {pagination:null, sortedBy:null};
        var sort = (oState.sortedBy) ? oState.sortedBy.key : "id";
        var dir = (oState.sortedBy && oState.sortedBy.dir == 'yui-dt-asc') ? "asc" : "desc";
        var startIndex = oState.pagination.recordOffset;
        var count = oState.pagination.rowsPerPage;

        // Build custom request
        var request = "<?php echo $this->link; ?>" + 
                      "/sortby/" + sort +
                      "/order/" + dir +
                      "/startIndex/" + startIndex +
                      "/count/" + count;
        return request;
    };
    
    // A function handle clicks on the rows
    var myRowClickHandler = function(clickEvent) {
        var target = clickEvent.target
        alert(clickEvent.target);
        dump(clickEvent.target);
    };
    
    // DataTable configuration
    var myConfigs = {
        initialRequest: "<?php echo $this->link; ?>/sortby/id/dir/asc/startIndex/0/count/10",
        dynamicData: true, 
        sortedBy : {key:"id", dir:YAHOO.widget.DataTable.CLASS_ASC},
        paginator: new YAHOO.widget.Paginator(
            { 
                rowsPerPage:10,
                template:"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
            }
        ), 
        generateRequest : myRequestBuilder
    };

    // DataTable instance
    var myDataTable = new YAHOO.widget.DataTable("dynamicdata", myColumnDefs, myDataSource, myConfigs);
    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        return oPayload;
    }
    
    // Enable row highlighting and clicking
    myDataTable.subscribe("rowMouseoverEvent", myDataTable.onEventHighlightRow); 
    myDataTable.subscribe("rowMouseoutEvent", myDataTable.onEventUnhighlightRow);
    myDataTable.subscribe("rowClickEvent", 
        function (oArgs) {
            var elTarget = oArgs.target;
            var oRecord = this.getRecord(elTarget);
            document.location = "/panel/remediation/sub/view/id/" + oRecord.getData("id");
        }
    ); 
    </script>

    <div id="columnOptionsPanel"><div id="columnOptionsPanelBody" class="bd"></div></div>
<?php Format_Section::stopSection(); ?>
