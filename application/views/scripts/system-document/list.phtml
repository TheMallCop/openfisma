<?php 
echo $this->escape($this->partial('system-document/searchbox.phtml', array('keywords' => $this->keywords)), 'none');
Fisma_Format_Section::startSection("Documentation <span id='searchResultsTotalFound'></span>"); ?>
<div id="list"></div>
<script type="text/javascript">
// Column definitions
var myColumnDefs = [
    {key:"d_id", label:"id",hidden: true}
    ,{key:"o_nickname", label:"System", sortable: true, hidden: false, formatter: "text"}
    ,{key:"t_name", label:"Document Name", sortable: true, hidden: false, formatter: "text"}
    ,{key:"d_version", label:"Version", sortable: true, hidden: false, formatter: "text"}
    ,{key:"d_description", label:"Version Notes", sortable: false, hidden: false, formatter: "text"}
    ,{key:"u_username", label:"Last Modified By User", sortable: true, hidden: false, formatter: "text"}
    ,{key:"d_updated_at", label:"Last Modified Date", sortable: true, hidden: false, formatter: "text"}
];

    // A function which builds the query string
    var myRequestBuilder = function(oState, oSelf) {
        // Get states or use defaults
        oState = oState || {pagination:null, sortedBy:null};
        var sort = (oState.sortedBy) ? oState.sortedBy.key : "o_nickname";
        var dir = (oState.sortedBy && oState.sortedBy.dir == 'yui-dt-asc') ? "asc" : "desc";
        var startIndex = oState.pagination.recordOffset;
        var count = oState.pagination.rowsPerPage;

        // Build custom request
        var request = "<?php echo $this->escape($this->link); ?>" + 
                      "/sortby/" + sort +
                      "/order/" + dir +
                      "/startIndex/" + startIndex +
                      "/count/" + count;
        return request;
    };

    var myDataSource = new YAHOO.util.DataSource('/system-document/search');
    myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
    myDataSource.responseSchema = {
        resultsList: "table.records",
        metaFields: {
            totalRecords: "table.totalRecords"
        }
    };
    
    // DataTable configuration
    var myConfigs = {
        initialRequest: "<?php echo $this->escape($this->link) ?>"
                      + "/sortby/o_nickname/order/asc/startIndex/0/count/"
                      + "<?php echo $this->escape($this->pageInfo['count'])?>",
        dynamicData: true, 
        sortedBy : {key:"o_nickname", dir:YAHOO.widget.DataTable.CLASS_ASC},
        paginator: new YAHOO.widget.Paginator(
            {
                rowsPerPage:<?php echo $this->escape($this->pageInfo['count'])?>,
                template:"{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
            }
        ),
        generateRequest : myRequestBuilder
    };
    
    var myDataTable = new YAHOO.widget.DataTable("list", myColumnDefs, myDataSource, myConfigs);
    // Update totalRecords on the fly with value from server
    myDataTable.handleDataReturnPayload = function(oRequest, oResponse, oPayload) {
        oPayload.totalRecords = oResponse.meta.totalRecords;
        // display total records in the search results header, if not already present
        var searchResultsHeader = document.getElementById('searchResultsTotalFound');
        if (!searchResultsHeader.firstChild) {
            var totalRecords = oResponse.meta.totalRecords ? oResponse.meta.totalRecords : 0;
            var searchTotalFound = document.createTextNode('(' + totalRecords + ' documents found)');
            searchResultsHeader.appendChild(searchTotalFound);
        }
        return oPayload;
    }
    
    myDataTable.subscribe("rowMouseoverEvent", myDataTable.onEventHighlightRow); 
    myDataTable.subscribe("rowMouseoutEvent", myDataTable.onEventUnhighlightRow);
    myDataTable.subscribe("rowClickEvent", 
        function (oArgs) {
            var elTarget = oArgs.target;
            var oRecord = this.getRecord(elTarget);
            document.location = "/system-document/view/id/" + oRecord.getData("d_id");
        }
    );
    
    var contextMenuItems = ["View"];
    var contextMenu = new YAHOO.widget.ContextMenu( 
        "contextMenu", 
        { 
            trigger:  myDataTable.getTbodyEl(), 
            itemdata: contextMenuItems, 
            lazyload: true 
        }
    );
    
    contextMenu.subscribe("click", contextMenuHandler);
    
    function contextMenuHandler(event, eventArgs) {
        var targetElement = this.contextEventTarget;
        var rowElement = myDataTable.getTrEl(targetElement);
        var rowRecord = myDataTable.getRecord(rowElement);
        var menuItem = eventArgs[1];
        var actionUrl = '';
        switch (menuItem.index) {
            case 0 :
                actionUrl = "/system-document/view/id/" + rowRecord.getData("d_id");
                break;
        }
        if (actionUrl != '') {
            window.open(actionUrl);
        }
    }
    
</script>
<?php Fisma_Format_Section::stopSection(); ?>
