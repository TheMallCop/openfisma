<?xml version="1.0" encoding="UTF-8"?>
<!--
  nmap.dtd
  This is the DTD for Nmap's XML output (-oX) format.
  $Id: nmap.dtd 15900 2009-10-24 01:01:08Z david $
  
  Originally written by:
  William McVey <wam@cisco.com> <wam+nmap@wamber.net>
  
  Now maintained by Fyodor <fyodor@insecure.org> as part of Nmap.     
  
  To validate using this file, simply add a DOCTYPE line similar to:
  <!DOCTYPE nmaprun SYSTEM "nmap.dtd">
  to the nmap output immediately below the prologue (the first line).  This
  should allow you to run a validating parser against the output (so long
  as the DTD is in your parser's DTD search path).
  
  Bugs:
  Most of the elements are "locked" into the specific order that nmap
  generates, when there really is no need for a specific ordering.
  This is primarily because I don't know the xml DTD construct to
  specify "one each of this list of elements, in any order".  If there
  is a construct similar to SGML's '&' operator, please let me know.
  
  Portions Copyright (c) 2001-2008 Insecure.Com LLC
  Portions Copyright (c) 2001 by Cisco systems, Inc.
  
  Permission to use, copy, modify, and distribute modified and
  unmodified copies of this software for any purpose and without fee is
  hereby granted, provided that (a) this copyright and permission notice
  appear on all copies of the software and supporting documentation, (b)
  the name of Cisco Systems, Inc. not be used in advertising or
  publicity pertaining to distribution of the program without specific
  prior permission, and (c) notice be given in supporting documentation
  that use, modification, copying and distribution is by permission of
  Cisco Systems, Inc.
  
  Cisco Systems, Inc. makes no representations about the suitability
  of this software for any purpose.  THIS SOFTWARE IS PROVIDED ``AS
  IS'' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
  WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
  FITNESS FOR A PARTICULAR PURPOSE.
-->
<!-- parameter entities to specify common "types" used elsewhere in the DTD -->
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="">
  <define name="attr_numeric">
    <data type="string"/>
  </define>
  <define name="attr_ipaddr">
    <data type="string"/>
  </define>
  <define name="attr_percent">
    <data type="string"/>
  </define>
  <define name="attr_type">
    <choice>
      <value>ipv4</value>
      <value>ipv6</value>
      <value>mac</value>
    </choice>
  </define>
  <define name="host_states">
    <choice>
      <value>up</value>
      <value>down</value>
      <value>unknown</value>
      <value>skipped</value>
    </choice>
  </define>
  <!-- see: nmap.c:statenum2str for list of port states -->
  <!-- Maybe they should be enumerated as in scan_types below , but I -->
  <!-- don't know how to escape states like open|filtered -->
  <define name="port_states">
    <data type="string"/>
  </define>
  <define name="hostname_types">
    <choice>
      <value>user</value>
      <value>PTR</value>
    </choice>
  </define>
  <!-- see output.c:output_xml_scaninfo_records for scan types -->
  <define name="scan_types">
    <choice>
      <value>syn</value>
      <value>ack</value>
      <value>bounce</value>
      <value>connect</value>
      <value>null</value>
      <value>xmas</value>
      <value>window</value>
      <value>maimon</value>
      <value>fin</value>
      <value>udp</value>
      <value>sctpinit</value>
      <value>sctpcookieecho</value>
      <value>ipproto</value>
    </choice>
  </define>
  <!-- <!ENTITY % ip_versions "(ipv4)" > -->
  <define name="port_protocols">
    <choice>
      <value>ip</value>
      <value>tcp</value>
      <value>udp</value>
      <value>sctp</value>
    </choice>
  </define>
  <!--
    I don't know exactly what these are, but the values were enumerated via:
    grep "conf=" *
  -->
  <define name="service_confs">
    <choice>
      <value>0</value>
      <value>3</value>
      <value>5</value>
      <value>10</value>
    </choice>
  </define>
  <!--
    This element was started in nmap.c:nmap_main().
    It represents to the topmost element of the output document.
  -->
  <define name="nmaprun">
    <element name="nmaprun">
      <ref name="attlist_nmaprun"/>
      <zeroOrMore>
        <ref name="scaninfo"/>
      </zeroOrMore>
      <ref name="verbose"/>
      <ref name="debugging"/>
      <zeroOrMore>
        <choice>
          <group>
            <ref name="taskbegin"/>
            <zeroOrMore>
              <ref name="taskprogress"/>
            </zeroOrMore>
            <ref name="taskend"/>
          </group>
          <ref name="host"/>
          <ref name="output"/>
        </choice>
      </zeroOrMore>
      <ref name="runstats"/>
    </element>
  </define>
  <define name="attlist_nmaprun" combine="interleave">
    <attribute name="scanner">
      <choice>
        <value>nmap</value>
      </choice>
    </attribute>
    <optional>
      <attribute name="args"/>
    </optional>
    <optional>
      <attribute name="start">
        <ref name="attr_numeric"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="startstr"/>
    </optional>
    <attribute name="version"/>
    <optional>
      <attribute name="profile_name"/>
    </optional>
    <attribute name="xmloutputversion"/>
  </define>
  <!-- this element is written in output.c:doscaninfo() -->
  <define name="scaninfo">
    <element name="scaninfo">
      <ref name="attlist_scaninfo"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_scaninfo" combine="interleave">
    <attribute name="type">
      <ref name="scan_types"/>
    </attribute>
    <optional>
      <attribute name="scanflags"/>
    </optional>
    <attribute name="protocol">
      <ref name="port_protocols"/>
    </attribute>
    <attribute name="numservices">
      <ref name="attr_numeric"/>
    </attribute>
    <attribute name="services"/>
  </define>
  <!-- these elements are written in nmap.c:nmap_main() -->
  <define name="verbose">
    <element name="verbose">
      <ref name="attlist_verbose"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_verbose" combine="interleave">
    <optional>
      <attribute name="level">
        <ref name="attr_numeric"/>
      </attribute>
    </optional>
  </define>
  <define name="debugging">
    <element name="debugging">
      <ref name="attlist_debugging"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_debugging" combine="interleave">
    <optional>
      <attribute name="level">
        <ref name="attr_numeric"/>
      </attribute>
    </optional>
  </define>
  <!-- this element is written in timing.c:beginOrEndTask() -->
  <define name="taskbegin">
    <element name="taskbegin">
      <ref name="attlist_taskbegin"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_taskbegin" combine="interleave">
    <attribute name="task"/>
    <attribute name="time">
      <ref name="attr_numeric"/>
    </attribute>
    <optional>
      <attribute name="extrainfo"/>
    </optional>
  </define>
  <!-- this element is written in timing.c:printStats() -->
  <define name="taskprogress">
    <element name="taskprogress">
      <ref name="attlist_taskprogress"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_taskprogress" combine="interleave">
    <attribute name="task"/>
    <attribute name="time">
      <ref name="attr_numeric"/>
    </attribute>
    <attribute name="percent">
      <ref name="attr_percent"/>
    </attribute>
    <attribute name="remaining">
      <ref name="attr_numeric"/>
    </attribute>
    <attribute name="etc">
      <ref name="attr_numeric"/>
    </attribute>
  </define>
  <!-- this element is written in timing.c:beginOrEndTask() -->
  <define name="taskend">
    <element name="taskend">
      <ref name="attlist_taskend"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_taskend" combine="interleave">
    <attribute name="task"/>
    <attribute name="time">
      <ref name="attr_numeric"/>
    </attribute>
    <optional>
      <attribute name="extrainfo"/>
    </optional>
  </define>
  <!--
    this element is started in nmap.c:nmap_main() and filled by
    output.c:write_host_status(), output.c:printportoutput(), and
    output.c:printosscanoutput()
  -->
  <define name="host">
    <element name="host">
      <ref name="attlist_host"/>
      <ref name="status"/>
      <ref name="address"/>
      <zeroOrMore>
        <choice>
          <ref name="address"/>
          <ref name="hostnames"/>
          <ref name="smurf"/>
          <ref name="ports"/>
          <ref name="os"/>
          <ref name="distance"/>
          <ref name="uptime"/>
          <ref name="tcpsequence"/>
          <ref name="ipidsequence"/>
          <ref name="tcptssequence"/>
          <ref name="hostscript"/>
          <ref name="trace"/>
        </choice>
      </zeroOrMore>
      <optional>
        <ref name="times"/>
      </optional>
    </element>
  </define>
  <define name="attlist_host" combine="interleave">
    <optional>
      <attribute name="starttime">
        <ref name="attr_numeric"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="endtime">
        <ref name="attr_numeric"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="comment"/>
    </optional>
  </define>
  <!-- these elements are written by output.c:write_xml_initial_hostinfo() -->
  <define name="status">
    <element name="status">
      <ref name="attlist_status"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_status" combine="interleave">
    <attribute name="state">
      <ref name="host_states"/>
    </attribute>
    <attribute name="reason"/>
  </define>
  <define name="address">
    <element name="address">
      <ref name="attlist_address"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_address" combine="interleave">
    <attribute name="addr">
      <ref name="attr_ipaddr"/>
    </attribute>
    <optional>
      <attribute name="addrtype" a:defaultValue="ipv4">
        <ref name="attr_type"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="vendor"/>
    </optional>
  </define>
  <define name="hostnames">
    <element name="hostnames">
      <ref name="attlist_hostnames"/>
      <zeroOrMore>
        <ref name="hostname"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist_hostnames" combine="interleave">
    <empty/>
  </define>
  <define name="hostname">
    <element name="hostname">
      <ref name="attlist_hostname"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_hostname" combine="interleave">
    <optional>
      <attribute name="name"/>
    </optional>
    <optional>
      <attribute name="type">
        <ref name="hostname_types"/>
      </attribute>
    </optional>
  </define>
  <!-- this element is written by output.c:write_host_status() -->
  <define name="smurf">
    <element name="smurf">
      <ref name="attlist_smurf"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_smurf" combine="interleave">
    <attribute name="responses">
      <ref name="attr_numeric"/>
    </attribute>
  </define>
  <!-- these elements are written by output.c:printportoutput() -->
  <define name="ports">
    <element name="ports">
      <ref name="attlist_ports"/>
      <zeroOrMore>
        <ref name="extraports"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="port"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist_ports" combine="interleave">
    <empty/>
  </define>
  <define name="extraports">
    <element name="extraports">
      <ref name="attlist_extraports"/>
      <zeroOrMore>
        <ref name="extrareasons"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist_extraports" combine="interleave">
    <attribute name="state">
      <ref name="port_states"/>
    </attribute>
    <attribute name="count">
      <ref name="attr_numeric"/>
    </attribute>
  </define>
  <define name="extrareasons">
    <element name="extrareasons">
      <ref name="attlist_extrareasons"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_extrareasons" combine="interleave">
    <attribute name="reason"/>
    <attribute name="count"/>
  </define>
  <define name="port">
    <element name="port">
      <ref name="attlist_port"/>
      <ref name="state"/>
      <optional>
        <ref name="owner"/>
      </optional>
      <optional>
        <ref name="service"/>
      </optional>
      <zeroOrMore>
        <ref name="script"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist_port" combine="interleave">
    <attribute name="protocol">
      <ref name="port_protocols"/>
    </attribute>
    <attribute name="portid">
      <ref name="attr_numeric"/>
    </attribute>
  </define>
  <define name="state">
    <element name="state">
      <ref name="attlist_state"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_state" combine="interleave">
    <attribute name="state">
      <ref name="port_states"/>
    </attribute>
    <attribute name="reason"/>
    <attribute name="reason_ttl"/>
    <optional>
      <attribute name="reason_ip"/>
    </optional>
  </define>
  <define name="owner">
    <element name="owner">
      <ref name="attlist_owner"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_owner" combine="interleave">
    <attribute name="name"/>
  </define>
  <define name="service">
    <element name="service">
      <ref name="attlist_service"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_service" combine="interleave">
    <attribute name="name"/>
    <attribute name="conf">
      <ref name="service_confs"/>
    </attribute>
    <attribute name="method">
      <choice>
        <value>table</value>
        <value>probed</value>
      </choice>
    </attribute>
    <optional>
      <attribute name="version"/>
    </optional>
    <optional>
      <attribute name="product"/>
    </optional>
    <optional>
      <attribute name="extrainfo"/>
    </optional>
    <optional>
      <attribute name="tunnel">
        <choice>
          <value>ssl</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="proto">
        <choice>
          <value>rpc</value>
        </choice>
      </attribute>
    </optional>
    <optional>
      <attribute name="rpcnum">
        <ref name="attr_numeric"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="lowver">
        <ref name="attr_numeric"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="highver">
        <ref name="attr_numeric"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="hostname"/>
    </optional>
    <optional>
      <attribute name="ostype"/>
    </optional>
    <optional>
      <attribute name="devicetype"/>
    </optional>
    <optional>
      <attribute name="servicefp"/>
    </optional>
  </define>
  <define name="script">
    <element name="script">
      <ref name="attlist_script"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_script" combine="interleave">
    <attribute name="id"/>
    <attribute name="output"/>
  </define>
  <define name="os">
    <element name="os">
      <ref name="attlist_os"/>
      <zeroOrMore>
        <ref name="portused"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="osclass"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="osmatch"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="osfingerprint"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist_os" combine="interleave">
    <empty/>
  </define>
  <define name="portused">
    <element name="portused">
      <ref name="attlist_portused"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_portused" combine="interleave">
    <attribute name="state">
      <ref name="port_states"/>
    </attribute>
    <attribute name="proto">
      <ref name="port_protocols"/>
    </attribute>
    <attribute name="portid">
      <ref name="attr_numeric"/>
    </attribute>
  </define>
  <define name="osclass">
    <element name="osclass">
      <ref name="attlist_osclass"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_osclass" combine="interleave">
    <attribute name="vendor"/>
    <optional>
      <attribute name="osgen"/>
    </optional>
    <optional>
      <attribute name="type"/>
    </optional>
    <attribute name="accuracy"/>
    <attribute name="osfamily"/>
  </define>
  <define name="osmatch">
    <element name="osmatch">
      <ref name="attlist_osmatch"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_osmatch" combine="interleave">
    <attribute name="name"/>
    <attribute name="accuracy">
      <ref name="attr_numeric"/>
    </attribute>
    <attribute name="line">
      <ref name="attr_numeric"/>
    </attribute>
  </define>
  <define name="osfingerprint">
    <element name="osfingerprint">
      <ref name="attlist_osfingerprint"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_osfingerprint" combine="interleave">
    <attribute name="fingerprint"/>
  </define>
  <define name="distance">
    <element name="distance">
      <ref name="attlist_distance"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_distance" combine="interleave">
    <attribute name="value">
      <ref name="attr_numeric"/>
    </attribute>
  </define>
  <define name="uptime">
    <element name="uptime">
      <ref name="attlist_uptime"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_uptime" combine="interleave">
    <attribute name="seconds">
      <ref name="attr_numeric"/>
    </attribute>
    <optional>
      <attribute name="lastboot"/>
    </optional>
  </define>
  <define name="tcpsequence">
    <element name="tcpsequence">
      <ref name="attlist_tcpsequence"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_tcpsequence" combine="interleave">
    <attribute name="index">
      <ref name="attr_numeric"/>
    </attribute>
    <attribute name="difficulty"/>
    <attribute name="values"/>
  </define>
  <define name="ipidsequence">
    <element name="ipidsequence">
      <ref name="attlist_ipidsequence"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_ipidsequence" combine="interleave">
    <attribute name="class"/>
    <attribute name="values"/>
  </define>
  <define name="tcptssequence">
    <element name="tcptssequence">
      <ref name="attlist_tcptssequence"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_tcptssequence" combine="interleave">
    <attribute name="class"/>
    <optional>
      <attribute name="values"/>
    </optional>
  </define>
  <define name="trace">
    <element name="trace">
      <ref name="attlist_trace"/>
      <zeroOrMore>
        <ref name="hop"/>
      </zeroOrMore>
      <optional>
        <ref name="error"/>
      </optional>
    </element>
  </define>
  <define name="attlist_trace" combine="interleave">
    <optional>
      <attribute name="proto"/>
    </optional>
    <optional>
      <attribute name="port"/>
    </optional>
  </define>
  <define name="hop">
    <element name="hop">
      <ref name="attlist_hop"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_hop" combine="interleave">
    <attribute name="ttl"/>
    <optional>
      <attribute name="rtt"/>
    </optional>
    <optional>
      <attribute name="ipaddr"/>
    </optional>
    <optional>
      <attribute name="host"/>
    </optional>
  </define>
  <define name="error">
    <element name="error">
      <ref name="attlist_error"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_error" combine="interleave">
    <optional>
      <attribute name="errorstr"/>
    </optional>
  </define>
  <define name="times">
    <element name="times">
      <ref name="attlist_times"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_times" combine="interleave">
    <attribute name="srtt"/>
    <attribute name="rttvar"/>
    <attribute name="to"/>
  </define>
  <!-- For embedding another type of output (screen output) like Zenmap does. -->
  <define name="output">
    <element name="output">
      <ref name="attlist_output"/>
      <text/>
    </element>
  </define>
  <define name="attlist_output" combine="interleave">
    <optional>
      <attribute name="type">
        <choice>
          <value>interactive</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <!-- these elements are generated in output.c:printfinaloutput() -->
  <define name="runstats">
    <element name="runstats">
      <ref name="attlist_runstats"/>
      <ref name="finished"/>
      <ref name="hosts"/>
    </element>
  </define>
  <define name="attlist_runstats" combine="interleave">
    <empty/>
  </define>
  <define name="finished">
    <element name="finished">
      <ref name="attlist_finished"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_finished" combine="interleave">
    <attribute name="time">
      <ref name="attr_numeric"/>
    </attribute>
    <optional>
      <attribute name="timestr"/>
    </optional>
    <attribute name="elapsed">
      <ref name="attr_numeric"/>
    </attribute>
  </define>
  <define name="hosts">
    <element name="hosts">
      <ref name="attlist_hosts"/>
      <empty/>
    </element>
  </define>
  <define name="attlist_hosts" combine="interleave">
    <optional>
      <attribute name="up" a:defaultValue="0">
        <ref name="attr_numeric"/>
      </attribute>
    </optional>
    <optional>
      <attribute name="down" a:defaultValue="0">
        <ref name="attr_numeric"/>
      </attribute>
    </optional>
    <attribute name="total">
      <ref name="attr_numeric"/>
    </attribute>
  </define>
  <define name="hostscript">
    <element name="hostscript">
      <ref name="attlist_hostscript"/>
      <oneOrMore>
        <ref name="script"/>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist_hostscript" combine="interleave">
    <empty/>
  </define>
  <start>
    <choice>
      <ref name="nmaprun"/>
    </choice>
  </start>
</grammar>
